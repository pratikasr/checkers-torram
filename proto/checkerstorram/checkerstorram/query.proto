syntax = "proto3";
package checkerstorram.checkerstorram;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "checkerstorram/checkerstorram/params.proto";
import "checkerstorram/checkerstorram/stored_game.proto";

option go_package = "checkers-torram/x/checkerstorram/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/checkers-torram/checkerstorram/params";
  }

  // GetGame queries a stored game by index
  rpc GetGame(QueryGetGameRequest) returns (QueryGetGameResponse) {
    option (google.api.http).get = "/checkers-torram/checkerstorram/games/{index}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryGetGameRequest is request type for the Query/GetGame method
message QueryGetGameRequest {
  string index = 1;
}

// QueryGetGameResponse is response type for the Query/GetGame method
message QueryGetGameResponse {
  StoredGame storedGame = 1 [(gogoproto.nullable) = false];
}