syntax = "proto3";
package checkerstorram.checkerstorram;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "checkerstorram/checkerstorram/params.proto";
import "checkerstorram/checkerstorram/stored_game.proto";

option go_package = "checkers-torram/x/checkerstorram/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/checkers-torram/checkerstorram/params";
  }
  // GetStoredGame returns the stored game at the specified index
  rpc GetStoredGame(QueryGetStoredGameRequest) returns (QueryGetStoredGameResponse) {
    option (google.api.http).get = "/checkers-torram/checkerstorram/stored_game/{index}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryGetStoredGameRequest is the request type for querying a stored game
message QueryGetStoredGameRequest {
  string index = 1;
}

// QueryGetStoredGameResponse is the response type for querying a stored game
message QueryGetStoredGameResponse {
  StoredGame stored_game = 1 [(gogoproto.nullable) = false];
}